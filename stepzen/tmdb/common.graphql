type Genre {
  id: Int
  name: String
}

type Company {
  id: Int
  name: String
  logo_path: String
  origin_country: String
}

type Country {
  iso_3166_1: String
  name: String
}

type Language {
  iso_639_1: String
  name: String
}

type ImageEntry {
  aspect_ratio: Float
  height: Int
  iso_639_1: String
  file_path: String
  file: ImageFile
  vote_average: Int
  vote_count: Int
  width: Int
  added: String
}

type ImageFile{
    original: String
    large: String
    medium: String
    small: String
}

type Images {
  backdrops: [ImageEntry]
  logos: [ImageEntry]
  posters: [ImageEntry]
}

type VideoLink {
  iso_639_1: String
  iso_3166_1: String
  name: String
  key: String
  site: String
  size: Int
  type: String
  official: Boolean
  published_at: String
  id: String
}

type Cast {
  adult: Boolean
  gender: Int
  id: Int
  known_for_department: String
  name: String
  original_name: String
  popularity: Int
  profile_path: String
  profile: ImageFile
  cast_id: Int,
  character: String
  credit_id: String
  order: Int
  is_favourite(userId: String!): Boolean @materializer (query: "isFavourite", arguments: [{name: "mediaId", field: "id"}, { name: "userId", argument: "userId" }])
  favourites: Count @materializer (query: "favouritesCount", arguments: [{name: "mediaId", field: "id"}])
}

type Crew {
  adult: Boolean
  gender: Int
  id: Int
  known_for_department: String
  name: String
  original_name: String
  popularity: Int
  profile_path: String
  profile: ImageFile
  credit_id: String
  department: String
  job: String
  is_favourite(userId: String!): Boolean @materializer (query: "isFavourite", arguments: [{name: "mediaId", field: "id"}, { name: "userId", argument: "userId" }])
  favourites: Count @materializer (query: "favouritesCount", arguments: [{name: "mediaId", field: "id"}])
}

type ListItem {
  adult: Boolean
  backdrop_path: String
  first_air_date: Date
  genre_ids: [Int]
  id: Int!
  media_type: String
  name: String
  origin_country: [String]
  original_language: String
  original_name: String
  original_title: String
  overview: String
  popularity: Float
  poster_path: String
  poster: JSON
  profile_path: String
  profile: JSON
  release_date: Date
  title: String
  video: Boolean
  vote_average: Float
  vote_count: Int

  is_favourite(userId: String!): Boolean @materializer (query: "isFavourite", arguments: [{name: "mediaId", field: "id"}, { name: "userId", argument: "userId" }])
  favourites: Count @materializer (query: "favouritesCount", arguments: [{name: "mediaId", field: "id"}])
}

type Credits {
  cast: [Cast]
  crew: [Crew]
}

type SocialLinks{
    imdb: String
    facebook: String
    instagram: String
    twitter: String
}

enum MediaType{
    all
    movie
    tv
    person
}

enum TimeWindow{
    day
    week
}

type Query {

  trending(mediaType: MediaType!, timeWindow: TimeWindow!): [ListItem]
    @rest(
      endpoint: "https://api.themoviedb.org/3/trending/$mediaType/$timeWindow"
      headers: [{ name: "authorization", value: "$authorization;" }]
      configuration: "curl_import_config"
      transforms: [
        {pathpattern:["results"],editor:"jq:.[]|.+={ poster: { original: \"https://image.tmdb.org/t/p/original\\(.poster_path)\", large: \"https://image.tmdb.org/t/p/w780\\(.poster_path)\", medium: \"https://image.tmdb.org/t/p/w342\\(.poster_path)\", small: \"https://image.tmdb.org/t/p/w154\\(.poster_path)\" } }"}
        {pathpattern:["results"],editor:"jq:.[]|.+={ profile: { original: \"https://image.tmdb.org/t/p/original\\(.profile_path)\", large: \"https://image.tmdb.org/t/p/w300\\(.profile_path)\", medium: \"https://image.tmdb.org/t/p/w185\\(.profile_path)\", small: \"https://image.tmdb.org/t/p/w45\\(.profile_path)\" } }"}
      ]
      resultroot: "results[]"
    )
  
  popular(mediaType: MediaType!): [ListItem]
    @rest(
      endpoint: "https://api.themoviedb.org/3/$mediaType/popular"
      headers: [{ name: "authorization", value: "$authorization;" }]
      configuration: "curl_import_config"
      transforms: [
        {pathpattern:["results"],editor:"jq:.[]|.+={ poster: { original: \"https://image.tmdb.org/t/p/original\\(.poster_path)\", large: \"https://image.tmdb.org/t/p/w780\\(.poster_path)\", medium: \"https://image.tmdb.org/t/p/w342\\(.poster_path)\", small: \"https://image.tmdb.org/t/p/w154\\(.poster_path)\" } }"}
        {pathpattern:["results"],editor:"jq:.[]|.+={ profile: { original: \"https://image.tmdb.org/t/p/original\\(.profile_path)\", large: \"https://image.tmdb.org/t/p/w300\\(.profile_path)\", medium: \"https://image.tmdb.org/t/p/w185\\(.profile_path)\", small: \"https://image.tmdb.org/t/p/w45\\(.profile_path)\" } }"}
      ]
      resultroot: "results[]"
    )
  
  topRated(mediaType: MediaType!): [ListItem]
    @rest(
      endpoint: "https://api.themoviedb.org/3/$mediaType/top_rated"
      headers: [{ name: "authorization", value: "$authorization;" }]
      configuration: "curl_import_config"
      transforms: [
        {pathpattern:["results"],editor:"jq:.[]|.+={ poster: { original: \"https://image.tmdb.org/t/p/original\\(.poster_path)\", large: \"https://image.tmdb.org/t/p/w780\\(.poster_path)\", medium: \"https://image.tmdb.org/t/p/w342\\(.poster_path)\", small: \"https://image.tmdb.org/t/p/w154\\(.poster_path)\" } }"}
        {pathpattern:["results"],editor:"jq:.[]|.+={ profile: { original: \"https://image.tmdb.org/t/p/original\\(.profile_path)\", large: \"https://image.tmdb.org/t/p/w300\\(.profile_path)\", medium: \"https://image.tmdb.org/t/p/w185\\(.profile_path)\", small: \"https://image.tmdb.org/t/p/w45\\(.profile_path)\" } }"}
      ]
      resultroot: "results[]"
    )

  genres(mediaType: MediaType!): [Genre]
    @rest(
      endpoint: "https://api.themoviedb.org/3/genre/$mediaType/list"
      headers: [{ name: "authorization", value: "$authorization;" }]
      configuration: "curl_import_config"
      resultroot: "genres[]"
    )

  byGenres(mediaType: MediaType!, genres: String): [ListItem]
    @rest(
      endpoint: "https://api.themoviedb.org/3/discover/$mediaType?with_genres=$genres"
      headers: [{ name: "authorization", value: "$authorization;" }]
      configuration: "curl_import_config"
      transforms: [
        {pathpattern:["results"],editor:"jq:.[]|.+={ poster: { original: \"https://image.tmdb.org/t/p/original\\(.poster_path)\", large: \"https://image.tmdb.org/t/p/w780\\(.poster_path)\", medium: \"https://image.tmdb.org/t/p/w342\\(.poster_path)\", small: \"https://image.tmdb.org/t/p/w154\\(.poster_path)\" } }"}
      ]
      resultroot: "results[]"
    )
}